import { Geist, Geist_Mono } from "next/font/google";
import { getServerSession } from "next-auth/next";
import ClientSessionProvider from "@/lib/ClientSessionProvider";
import { Toaster } from 'react-hot-toast';

import { authOptions } from '@/lib/auth';
import './globals.css';
import { SessionProvider } from "next-auth/react";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({ children }) {
  const session = await getServerSession(authOptions);

  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <ClientSessionProvider session={session}>
          {children}
          <Toaster position="top-right" />
        </ClientSessionProvider>
      </body>
    </html>
  );
}


// import { Geist, Geist_Mono } from "next/font/google";
// import { getServerSession } from "next-auth/next";
// import { authOptions } from "@/app/api/auth/[...nextauth]/route";
// import ClientSessionProvider from "@/lib/ClientSessionProvider";
// import { Toaster } from 'react-hot-toast';
// import './globals.css';

// const geistSans = Geist({
//   variable: "--font-geist-sans",
//   subsets: ["latin"],
// });

// const geistMono = Geist_Mono({
//   variable: "--font-geist-mono",
//   subsets: ["latin"],
// });

// export const metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

// export default async function RootLayout({ children }) {
//   let session = null;

//   try {
//     session = await getServerSession(authOptions);
//   } catch (error) {
//     console.error("Failed to fetch session:", error);
//   }

//   return (
//     <html lang="en">
//       <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
//         <ClientSessionProvider session={session}>
//           {children}
//           <Toaster position="top-right" />
//         </ClientSessionProvider>
//       </body>
//     </html>
//   );
// }
